/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, Reflector } from "@react-three/drei";

const material = new THREE.MeshPhysicalMaterial({
  color: new THREE.Color("#bb86a1").convertSRGBToLinear(),
  roughness: 0,
  clearcoat: 1,
  clearcoatRoughness: 0,
});

export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF("./SkillGLB.glb");
  return (
    <group ref={group} {...props} dispose={null}>
      <Reflector
        resolution={1024}
        receiveShadow
        mirror={0}
        mixBlur={1}
        mixStrength={0.3}
        depthScale={1}
        minDepthThreshold={0.8}
        maxDepthThreshold={1}
        position={[0, 0, 8]}
        scale={[2, 2, 1]}
        rotation={[-Math.PI / 2, 0, Math.PI]}
        args={[70, 70]}
      >
        {(Material, props) => (
          <Material metalness={0.25} color="#eea6b1" roughness={1} {...props} />
        )}
      </Reflector>
      {/* <mesh
        receiveShadow
        castShadow
        material={material}
        geometry={nodes.Sphere.geometry}
        position={[-1.93, 1, -0.94]}
        rotation={[-Math.PI, 0.73, -Math.PI]}
      /> */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.R.geometry}
        material={material}
        position={[5.8, 0.99, -8.22]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.E.geometry}
        material={material}
        position={[4.45, 0.92, -8.22]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.A.geometry}
        material={material}
        position={[3.24, 0.95, -8.22]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.T.geometry}
        material={material}
        position={[0.94, 1.06, -8.22]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.C.geometry}
        material={material}
        position={[2, 0.94, -8.22]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.NativeBox.geometry}
        material={material}
        position={[4.79, 2.67, -8.22]}
        rotation={[0, 0.27, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.nextBox.geometry}
        material={material}
        position={[0.33, 2.84, -8.15]}
        rotation={[0, -0.58, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.jsBox.geometry}
        material={material}
        position={[-1.77, 1.17, -8.32]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cssBox.geometry}
        material={material}
        position={[-8.49, 4.14, -10.32]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sassBox.geometry}
        material={material}
        position={[-6.82, 4.14, -9.64]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.htmlBox.geometry}
        material={material}
        position={[-5.14, 4.14, -8.95]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cssBox001.geometry}
        material={material}
        position={[-8.49, 2.33, -10.32]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sassBox001.geometry}
        material={material}
        position={[-6.82, 2.33, -9.64]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.htmlBox001.geometry}
        material={material}
        position={[-5.14, 2.33, -8.95]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.nodejsBox.geometry}
        material={material}
        position={[0.25, 6.09, -7.83]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={1.78}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sanityBox.geometry}
        material={material}
        position={[-3.31, 6.09, -7.83]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={1.78}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.djangoBox.geometry}
        material={material}
        position={[-1.53, 6.09, -7.83]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={1.78}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.NativeLogo.geometry}
        material={materials.NativeLogo}
        position={[4.8, 2.67, -8.19]}
        rotation={[0, 0.27, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.nextLogo.geometry}
        material={materials.Next}
        position={[0.32, 2.84, -8.14]}
        rotation={[-Math.PI, 0.58, -Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cssTex.geometry}
        material={materials.sassTex}
        position={[-8.21, 4.14, -11.02]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.jsLogo.geometry}
        material={materials.jsLogo}
        position={[-1.37, 1.17, -9.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sassTex.geometry}
        material={materials.cssTex}
        position={[-6.53, 4.14, -10.34]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.htmlTex.geometry}
        material={materials.htmlTex}
        position={[-4.86, 4.14, -9.65]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cssTex001.geometry}
        material={materials.mui}
        position={[-8.21, 2.33, -11.02]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sassTex001.geometry}
        material={materials.tailwind}
        position={[-6.53, 2.33, -10.34]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.nodejsTex.geometry}
        material={materials.nodeJS}
        position={[0.25, 6.09, -7.86]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.sanityTex.geometry}
        material={materials.sanity}
        position={[-3.31, 6.09, -7.85]}
        rotation={[Math.PI, 0, Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.htmlTex001.geometry}
        material={materials.bootstrap}
        position={[-4.86, 2.33, -9.65]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.djangoTex.geometry}
        material={materials.django}
        position={[-1.53, 6.09, -7.85]}
        rotation={[Math.PI, 0, Math.PI]}
      />
    </group>
  );
}

useGLTF.preload("./SkillGLB.glb");
